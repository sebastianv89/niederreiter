- Implementation (see the TODO's that are sprinkled everywhere)
- Testing
  - Self-test (constants etc)
  - Comparison with python reference implementation
- README
- LICENSE
- Documentation
  - Doxygen
- Makefile
- C-style comments only (no //)
- Remove the signed_word_t type:
  - Bitwise operations are only defined on unsigned type,
    signed shift operations are implementation dependent and
    can lead to unspecified behaviour.
- The implementation should cover two designs:
  - ANSI C / Supercop
    - main function: encryption (KEM/DEM)
    - use crypto_uintN types (N \in {8, 16, 32, 64})
    - randombytes.h
  - OQS
    - main function: key-exchange (KEM)
    - use inttypes.h (size \in {8, 16, 32, 64})
    - oqs/randombytes.h
  - Although more combinations of the above choices are possible,
    they are not covered by the different settings that can be
    specified with preprocessor definitions and must be manually
    implemented.
  - This does not cover the optimization of clmul.
    - Preferably, the compiler detects if clmul exists on the target
      platform and falls back to a slower implementation if necesary.
